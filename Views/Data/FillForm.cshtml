@model ExwhyzeeEDI.Web.Models.Entities.Profile

@{
    ViewBag.Title = "FillForm";

    Layout = "~/Views/Shared/_Viewlay.cshtml";

}
<style>
    label {
        margin-bottom: 0px !important;
        margin-top: 19px !important;
    }

    h6 {
        color: #c36552;
        font-weight: 900;
        margin: 50px 0 0 0 !important;
    }
</style>


@using (Html.BeginForm("FillForm", "Data", new { ReturnUrl = ViewBag.ReturnUrl, userId = ViewBag.userId, SchoolId = ViewBag.SchoolId }, FormMethod.Post, new { id = "Form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="">
        @* <h4 style="margin-bottom:0px;">Complete Application</h4>*@
        <hr style="margin-bottom:0px;margin-top:5px;" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-md-12">
                <h6 class="">Personal Data</h6>
            </div>

            <div class="col-md-6">

                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "" })
                <select class="form-control" name="Title">
                    <option value="Mr">Mr</option>
                    <option value="Mr">Mrs</option>
                    <option value="Mr">Miss</option>
                </select>

                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Surname", required = "required", id = "U1", onkeyup = "myFunction1()" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-6">

                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", required = "required", id = "U2", onkeyup = "myFunction2()" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })


            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.OtherName, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control", placeholder = "Other Names", id = "U3", onkeyup = "myFunction3()" } })
                @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">

            <div class="col-md-3">

                @Html.LabelFor(model => model.Gender, htmlAttributes: new { })

                <select class="form-control selecting" required="required" name="Gender">
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </select>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { })
                <div id="datepicker" class="input-group date" data-date-format="mm-dd-yyyy" required="required">
                    <input class="form-control" name="DateOfBirth" type="text" placeholder="MM/DD/YYYY" />
                    <span class="input-group-addon"><i class="fa fa-calculator"></i></span>
                </div>
                @*<input type="date" name="DateOfBirth" class="form-control" />*@
                @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { })

                <select class="form-control selecting" required="required" name="MaritalStatus">
                    <option value="Single">Single</option>
                    <option value="Married">Married</option>
                    <option value="Widow">Widow</option>
                    <option value="Widower">Widower</option>
                    <option value="Divorced">Divorced</option>
                </select>
                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.Religion, htmlAttributes: new { })

                <select class="form-control selecting" required="required" name="Religion">
                    <option value="Christian">Christian</option>
                    <option value="Muslim">Muslim</option>

                </select>
                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12">
                <h6 class="">Contact Information</h6>
            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { })

                @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control", required = "required", id = "U4", onkeyup = "myFunction4()" } })
                @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">

                @Html.LabelFor(model => model.PermanentHomeAddress, htmlAttributes: new { })

                @Html.EditorFor(model => model.PermanentHomeAddress, new { htmlAttributes = new { @class = "form-control", required = "required", id = "U5", onkeyup = "myFunction5()" } })
                @Html.ValidationMessageFor(model => model.PermanentHomeAddress, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.ModeOfIdentification, htmlAttributes: new { })

                <select class="form-control selecting" required="required" name="ModeOfIdentification">
                    <option value="International Passport">International Passport</option>
                    <option value="National ID">National ID</option>
                    <option value="Drivers License">Drivers License</option>
                    <option value="Voters Card">Voters Card</option>

                </select>
                @Html.ValidationMessageFor(model => model.ModeOfIdentification, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">

                @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { })

                @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", id = "U6", required = "required", onkeyup = "myFunction6()" } })
                @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })

            </div>

            <div class="clearfix"></div>

            <div class="col-md-6">

                @Html.LabelFor(model => model.StateofOrigin, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("StateofOrigin", ViewBag.StateofOrigin as SelectList, "Select a State", new { id = "StateOfOrigin", @class = "form-control selecting" })                @Html.ValidationMessageFor(model => model.StateofOrigin, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-6">

                @Html.LabelFor(model => model.LocalGovernmentArea, htmlAttributes: new { @class = "control-label" })

                <select id="LGA" name="LocalGovernmentArea" class="form-control selecting"></select>
                @Html.ValidationMessageFor(model => model.LocalGovernmentArea, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12">
                <h6>Career Information</h6>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.CurrentOccupation, htmlAttributes: new { })

                @Html.EditorFor(model => model.CurrentOccupation, new { htmlAttributes = new { @class = "form-control", required = "required", id = "U7", onkeyup = "myFunction7()" } })
                @Html.ValidationMessageFor(model => model.CurrentOccupation, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.AreaOfInterest, htmlAttributes: new { })

                <select class="form-control selecting" required="required" name="AreaOfInterest">
                    <option value="Services">Services</option>
                    <option value="Production">Production</option>
                    <option value="Trading">Trading</option>
                    <option value="Agro-allied">Agro-allied</option>
                </select>
                @Html.ValidationMessageFor(model => model.AreaOfInterest, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.AreYouInAbyVocationNow, htmlAttributes: new { })


                <select class="form-control selecting" required="required" name="AreYouInAbyVocationNow">
                    <option value="Yes">Yes</option>
                    <option value="No">No</option>
                </select>

                @Html.ValidationMessageFor(model => model.AreYouInAbyVocationNow, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.SpecifyVocation, htmlAttributes: new { })

                @Html.EditorFor(model => model.SpecifyVocation, new { htmlAttributes = new { @class = "form-control", required = "required", id = "U8", onkeyup = "myFunction8()" } })
                @Html.ValidationMessageFor(model => model.SpecifyVocation, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-12">
                @Html.LabelFor(model => model.DoYouRequireICTSkillsForYourBusiness, htmlAttributes: new { })


                <select class="form-control selecting" required="required" name="DoYouRequireICTSkillsForYourBusiness">
                    <option value="Yes">Yes</option>
                    <option value="No">No</option>
                </select>
                @Html.ValidationMessageFor(model => model.DoYouRequireICTSkillsForYourBusiness, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12">
                <h6>Educational Information</h6>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EducationalQualification, htmlAttributes: new { })


                <select class="form-control selecting" required="required" name="EducationalQualification">
                    <option value="First School Leaving">First School Leaving</option>
                    <option value="JSSCE">JSSCE</option>
                    <option value="SSSCE">SSSCE</option>
                    <option value="HND">HND</option>
                    <option value="B.Sc">B.Sc</option>
                    <option value="B.Tech">B.Tech</option>
                    <option value="PGD">PGD</option>
                    <option value="MSC">MSC</option>
                    <option value="MBA">MBA</option>
                </select>
                @Html.ValidationMessageFor(model => model.EducationalQualification, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.SchoolAttended, htmlAttributes: new { })

                @Html.EditorFor(model => model.SchoolAttended, new { htmlAttributes = new { @class = "form-control", id = "U9", required = "required", onkeyup = "myFunction9()" } })
                @Html.ValidationMessageFor(model => model.SchoolAttended, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Discipline, htmlAttributes: new { })

                @Html.EditorFor(model => model.Discipline, new { htmlAttributes = new { @class = "form-control", id = "U10", required = "required", onkeyup = "myFunction10()" } })
                @Html.ValidationMessageFor(model => model.Discipline, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.YearGraduated, htmlAttributes: new { })

                @Html.EditorFor(model => model.YearGraduated, new { htmlAttributes = new { @class = "form-control", id = "U11", required = "required", onkeyup = "myFunction11()" } })
                @Html.ValidationMessageFor(model => model.YearGraduated, "", new { @class = "text-danger" })
            </div>
            <div class="clearfix"></div>


        </div>

        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12">
                <h6>.</h6>
            </div>
            <div class="col-md-12">
                @Html.LabelFor(model => model.HowDidYouGetToKnowAboutEDI, htmlAttributes: new { })
                <textarea name="HowDidYouGetToKnowAboutEDI" required="required" rows="10" class="form-control" aria-invalid="false" id="U12" onkeyup="myFunction12()"></textarea>
                @Html.ValidationMessageFor(model => model.HowDidYouGetToKnowAboutEDI, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-12">
                @Html.LabelFor(model => model.WhatIsYourMotivation, htmlAttributes: new { })

                <textarea name="WhatIsYourMotivation" rows="10" class="form-control" required="required" aria-invalid="false" id="U13" onkeyup="myFunction13()"></textarea>
                @Html.ValidationMessageFor(model => model.WhatIsYourMotivation, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-12">
                @Html.LabelFor(model => model.WhatsTheBenefitOfEDI, htmlAttributes: new { })

                <textarea name="WhatsTheBenefitOfEDI" rows="10" class="form-control" required="required" aria-invalid="false" id="U14" onkeyup="myFunction14()"></textarea>
                @Html.ValidationMessageFor(model => model.WhatsTheBenefitOfEDI, "", new { @class = "text-danger" })

            </div>
        </div>


        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PassportUrl, htmlAttributes: new { })

                <input type="file" name="upload" class="form-control" max="102400" />
            </div>

        </div>

        <div class="row">
            <div class="col-md-12">
                <h6 class="">Nirsal Update</h6>
            </div>

            <div class="col-md-4">

                @Html.LabelFor(model => model.NirsalRegistration, htmlAttributes: new { @class = "" })
                @Html.CheckBoxFor(model => model.NirsalRegistration)

                @Html.ValidationMessageFor(model => model.NirsalRegistration, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Have you Opened an Account", htmlAttributes: new { @class = "" })
                @Html.CheckBoxFor(model => model.AccountOpen)

                @Html.ValidationMessageFor(model => model.AccountOpen, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">

                @Html.Label("Have you done your Business Plan?", htmlAttributes: new { @class = "" })
                @Html.CheckBoxFor(model => model.BusinessPlan)

                @Html.ValidationMessageFor(model => model.BusinessPlan, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-12">
                @Html.Label("Business Sector", htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", placeholder = "", required = "required", id = "U3", onkeyup = "myFunction3()" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <br />
        <div class="">
            <input type="submit" value="Submit Application" class="btn btn-default" />
        </div>
    </div>
    <br />
    <br />

}


@*</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/jscript">
        $(function () {
            $('#StateOfOrigin').change(function () {
                $.getJSON('/Data/LgaList/' + $('#StateOfOrigin').val(), function (data) {
                    var items = '<option>Select a Local Government</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    $('#LGA').html(items);
                });
            });
        });
    </script>

    <script src="http://exwhyzee.ng/libraries/admin/main.js"></script>

    <script>

        function myFunction1() {
            var x = document.getElementById("U1");
            x.value = x.value.toUpperCase();
        }
        function myFunction2() {
            var x = document.getElementById("U2");
            x.value = x.value.toUpperCase();
        }
        function myFunction3() {
            var x = document.getElementById("U3");
            x.value = x.value.toUpperCase();
        }
        function myFunction4() {
            var x = document.getElementById("U4");
            x.value = x.value.toUpperCase();
        }
        function myFunction5() {
            var x = document.getElementById("U5");
            x.value = x.value.toUpperCase();
        }
        function myFunction6() {
            var x = document.getElementById("U6");
            x.value = x.value.toUpperCase();
        }
        function myFunction7() {
            var x = document.getElementById("U7");
            x.value = x.value.toUpperCase();
        }
        function myFunction8() {
            var x = document.getElementById("U8");
            x.value = x.value.toUpperCase();
        }
        function myFunction() {
            var x = document.getElementById("U9");
            x.value = x.value.toUpperCase();
        }
        function myFunction11() {
            var x = document.getElementById("U11");
            x.value = x.value.toUpperCase();
        }
        function myFunction10() {
            var x = document.getElementById("U10");
            x.value = x.value.toUpperCase();
        }
        function myFunction12() {
            var x = document.getElementById("U12");
            x.value = x.value.toUpperCase();
        }
        function myFunction13() {
            var x = document.getElementById("U13");
            x.value = x.value.toUpperCase();
        }
        function myFunction14() {
            var x = document.getElementById("U14");
            x.value = x.value.toUpperCase();
        }
    </script>
}
