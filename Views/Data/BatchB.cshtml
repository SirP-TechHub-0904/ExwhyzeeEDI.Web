@model ExwhyzeeEDI.Web.Models.NewRegisterViewModel

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <!-- left column -->
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Certificate</h3>
                @Html.ActionLink("search number", "SearchNumber", null, new { @class = "btn btn-primary", style = "padding: 7px;" })

                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="box-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", id = "U1" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "U2" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OtherName, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control", id = "U3" } })
                    @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "U1" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
            </div>


        </div>
            }
        </div>
        <div class="col-md-3"></div>

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

                function myFunction1() {
                    var x = document.getElementById("U1");
                    x.value = x.value.toUpperCase();
                }
                function myFunction2() {
                    var x = document.getElementById("U2");
                    x.value = x.value.toUpperCase();
                }
                function myFunction3() {
                    var x = document.getElementById("U3");
                    x.value = x.value.toUpperCase();
                }
        </script>
        }
